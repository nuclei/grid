{"version":3,"file":"grid.js","sources":["../src/grid.ts"],"sourcesContent":["/* global HTMLElement */\n'use strict'\n\ndeclare const ShadyCSS // eslint-disable-line no-unused-vars\nlet globalStyles\nlet shadowRoot\n// setup variables\nlet maxColumns = 24\nlet maxRows = 24\nlet style = `\n:host{\n  display: grid;\n  grid-template-columns: repeat(var(--grid-columns, auto-fill), 1fr);\n  grid-template-rows: var(--grid-rows, none);\n  grid-gap: var(--grid-gutter, 0);\n  grid-row-gap: var(--grid-row-gutter, var(--grid-gutter, 0));\n}\n:host([autoflow]){\n  grid-auto-flow: row dense;\n}\n:host([autoflow=column]){\n  grid-auto-flow: column dense;\n}\n\\n`\n\nlet template = document.createElement('template')\n\nclass Grid extends HTMLElement { // eslint-disable-line no-unused-vars\n  /* Typescript: declare variables */\n  private _columns: string = null // eslint-disable-line no-undef\n  private _rows: string = null // eslint-disable-line no-undef\n  private _gutter: string = null // eslint-disable-line no-undef\n  private _rowgutter: string = null // eslint-disable-line no-undef\n  private _autoflow: string = null // eslint-disable-line no-undef\n\n  constructor () {\n    // If you define a constructor, always call super() first!\n    // This is specific to CE and required by the spec.\n    super()\n    // create shadowRoot\n    shadowRoot = this.attachShadow({mode: 'open'})\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  static get observedAttributes () {\n    return ['gutter', 'rowgutter', 'autoflow', 'rows', 'columns']\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  attributeChangedCallback (attrName: string, oldVal, newVal) {\n    this[attrName] = newVal\n  }\n\n  /**\n  * @method connectedCallback\n  * @description When element is added to DOM\n   */\n  connectedCallback () {\n    globalStyles = window.getComputedStyle(document.documentElement)\n    // add columns for no media query\n    style += this._columnCss()\n    // add breakpoints\n    style += this._breakPointCss()\n    // attach to template\n    template.innerHTML = `<style>${style}</style>\\n<slot></slot>`\n    // check if polyfill is used\n    if (typeof ShadyCSS !== 'undefined') {\n      ShadyCSS.prepareTemplate(template, 'grid-container') // eslint-disable-line no-undef\n      // apply css polyfill\n      ShadyCSS.styleElement(this) // eslint-disable-line no-undef\n    }\n    // add content to shadowRoot\n    shadowRoot.appendChild(document.importNode(template.content, true))\n  }\n  /**\n  * @method _getBreakpoints\n  * @description get breakpoints from parent css variables\n   */\n  private _getBreakpoints () {\n    let breakpoints = {}\n    let sizes = [ 'xs', 's', 'm', 'l', 'xl', 'xxl' ]\n    // get breakpoints from css variables\n    sizes.forEach(function (size) {\n      let breakpoint = String(globalStyles.getPropertyValue('--grid-breakpoint-' + size)).trim() || null\n      if (breakpoint !== null) {\n        breakpoints[size] = breakpoint\n      }\n    })\n    return breakpoints\n  }\n  /**\n  * @method _columnCss\n  * @description return columns css\n   */\n  private _columnCss (size: string = '') {\n    let style = ``\n    // loop through columns\n    for (let i = 1; i <= maxColumns; i++) {\n      style += `::slotted([column~=\"${i}${size}\"]){ grid-column-end: span ${i}; }\\n`\n      style += `::slotted([start-column~=\"${i}${size}\"]){ grid-column-start: ${i}; }\\n`\n    }\n    // loop through rows\n    for (let i = 1; i <= maxRows; i++) {\n      style += `::slotted([row~=\"${i}${size}\"]){ grid-row-end: span ${i}; }\\n`\n      style += `::slotted([start-row~=\"${i}${size}\"]){ grid-row-start: ${i}; }\\n`\n    }\n    // reset start values\n    style += `::slotted([start-column~=\"0${size}\"]){ grid-column-start: auto; }\\n`\n    style += `::slotted([start-row~=\"0${size}\"]){ grid-row-start: auto; }\\n`\n    return style\n  }\n  /**\n  * @method _breakPointCss\n  * @description return break point css\n   */\n  private _breakPointCss () {\n    let style = ``\n    // get breakpoints from css variables\n    let breakpoints = this._getBreakpoints()\n    // add breakpoint css\n    Object.keys(breakpoints).forEach((size, index) => {\n      style += `@media (min-width:${breakpoints[size]}){\n        :host{\n          grid-template-columns: repeat(var(--grid-columns-${size}, var(--grid-columns, auto-fill)), 1fr);\n          grid-template-rows: var(--grid-rows-${size}, var(--grid-rows, none));\n        }\n        ${this._columnCss(size)}\n      }\\n`\n    })\n    // return breakpoints\n    return style\n  }\n  /**\n  * @method setter autoflow\n  * @description set the autoflow property\n   */\n  set autoflow (autoflow: string) {\n    if (this._autoflow === autoflow) return\n    this._autoflow = autoflow\n\n    this.setAttribute('autoflow', autoflow)\n  }\n  /**\n  * @method setter gutter\n  * @description set the gutter property\n   */\n  set gutter (gutter: string) {\n    if (this._gutter === gutter) return\n    this._gutter = gutter\n\n    this.style.setProperty('--grid-gutter', gutter)\n    this.setAttribute('gutter', gutter)\n  }\n  /**\n  * @method setter rowgutter\n  * @description set the rowgutter property\n   */\n  set rowgutter (rowgutter: string) {\n    if (this._rowgutter === rowgutter) return\n    this._rowgutter = rowgutter\n\n    this.style.setProperty('--grid-row-gutter', rowgutter)\n    this.setAttribute('rowgutter', rowgutter)\n  }\n  /**\n  * @method setter columns\n  * @description set the columns property\n   */\n  set columns (columns: string) {\n    if (this._columns === columns) return\n    this._columns = columns\n\n    columns.split(' ').forEach((item) => {\n      let size = item.replace(/[0-9]+/g, '').trim()\n      this.style.setProperty(`--grid-columns${size.length > 0 ? '-' : ''}${size}`, item.replace(/[^0-9]*/g, '').trim())\n    })\n\n    this.setAttribute('columns', columns)\n  }\n  /**\n  * @method setter rows\n  * @description set the rows property\n   */\n  set rows (rows: string) {\n    if (this._rows === rows) return\n    this._rows = rows\n\n    rows.split(' ').forEach((item) => {\n      let size = item.replace(/[0-9]+/g, '').trim()\n      this.style.setProperty(`--grid-rows${size.length > 0 ? '-' : ''}${size}`, `repeat(${item.replace(/[^0-9]*/g, '').trim()}, 1fr)`)\n    })\n\n    this.setAttribute('rows', rows)\n  }\n}\n\nwindow.customElements.define('grid-container', Grid)\n"],"names":[],"mappings":"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"}