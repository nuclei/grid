{"version":3,"file":"grid.js","sources":["../src/style.ts","../src/grid.ts"],"sourcesContent":["export let style = `\n<style>\n:host{\n  display: grid;\n  grid-template-columns: repeat(var(--grid-columns, auto-fill), 1fr);\n  grid-template-rows: var(--grid-rows, none);\n  grid-gap: var(--grid-gutter, 0);\n  grid-row-gap: var(--grid-row-gutter, var(--grid-gutter, 0));\n}\n:host([autoflow]){\n  grid-auto-flow: row dense;\n}\n:host([autoflow=column]){\n  grid-auto-flow: column dense;\n}\n::slotted([column~=\"1\"]), :host([size=\"xs\"]) ::slotted([column~=\"1xs\"]), :host([size=\"s\"]) ::slotted([column~=\"1s\"]), :host([size=\"m\"]) ::slotted([column~=\"1m\"]), :host([size=\"l\"]) ::slotted([column~=\"1l\"]), :host([size=\"xl\"]) ::slotted([column~=\"1xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"1xxl\"]){ grid-column-end: span 1; }\n::slotted([column~=\"2\"]), :host([size=\"xs\"]) ::slotted([column~=\"2xs\"]), :host([size=\"s\"]) ::slotted([column~=\"2s\"]), :host([size=\"m\"]) ::slotted([column~=\"2m\"]), :host([size=\"l\"]) ::slotted([column~=\"2l\"]), :host([size=\"xl\"]) ::slotted([column~=\"2xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"2xxl\"]){ grid-column-end: span 2; }\n::slotted([column~=\"3\"]), :host([size=\"xs\"]) ::slotted([column~=\"3xs\"]), :host([size=\"s\"]) ::slotted([column~=\"3s\"]), :host([size=\"m\"]) ::slotted([column~=\"3m\"]), :host([size=\"l\"]) ::slotted([column~=\"3l\"]), :host([size=\"xl\"]) ::slotted([column~=\"3xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"3xxl\"]){ grid-column-end: span 3; }\n::slotted([column~=\"4\"]), :host([size=\"xs\"]) ::slotted([column~=\"4xs\"]), :host([size=\"s\"]) ::slotted([column~=\"4s\"]), :host([size=\"m\"]) ::slotted([column~=\"4m\"]), :host([size=\"l\"]) ::slotted([column~=\"4l\"]), :host([size=\"xl\"]) ::slotted([column~=\"4xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"4xxl\"]){ grid-column-end: span 4; }\n::slotted([column~=\"5\"]), :host([size=\"xs\"]) ::slotted([column~=\"5xs\"]), :host([size=\"s\"]) ::slotted([column~=\"5s\"]), :host([size=\"m\"]) ::slotted([column~=\"5m\"]), :host([size=\"l\"]) ::slotted([column~=\"5l\"]), :host([size=\"xl\"]) ::slotted([column~=\"5xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"5xxl\"]){ grid-column-end: span 5; }\n::slotted([column~=\"6\"]), :host([size=\"xs\"]) ::slotted([column~=\"6xs\"]), :host([size=\"s\"]) ::slotted([column~=\"6s\"]), :host([size=\"m\"]) ::slotted([column~=\"6m\"]), :host([size=\"l\"]) ::slotted([column~=\"6l\"]), :host([size=\"xl\"]) ::slotted([column~=\"6xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"6xxl\"]){ grid-column-end: span 6; }\n::slotted([column~=\"7\"]), :host([size=\"xs\"]) ::slotted([column~=\"7xs\"]), :host([size=\"s\"]) ::slotted([column~=\"7s\"]), :host([size=\"m\"]) ::slotted([column~=\"7m\"]), :host([size=\"l\"]) ::slotted([column~=\"7l\"]), :host([size=\"xl\"]) ::slotted([column~=\"7xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"7xxl\"]){ grid-column-end: span 7; }\n::slotted([column~=\"8\"]), :host([size=\"xs\"]) ::slotted([column~=\"8xs\"]), :host([size=\"s\"]) ::slotted([column~=\"8s\"]), :host([size=\"m\"]) ::slotted([column~=\"8m\"]), :host([size=\"l\"]) ::slotted([column~=\"8l\"]), :host([size=\"xl\"]) ::slotted([column~=\"8xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"8xxl\"]){ grid-column-end: span 8; }\n::slotted([column~=\"9\"]), :host([size=\"xs\"]) ::slotted([column~=\"9xs\"]), :host([size=\"s\"]) ::slotted([column~=\"9s\"]), :host([size=\"m\"]) ::slotted([column~=\"9m\"]), :host([size=\"l\"]) ::slotted([column~=\"9l\"]), :host([size=\"xl\"]) ::slotted([column~=\"9xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"9xxl\"]){ grid-column-end: span 9; }\n::slotted([column~=\"10\"]), :host([size=\"xs\"]) ::slotted([column~=\"10xs\"]), :host([size=\"s\"]) ::slotted([column~=\"10s\"]), :host([size=\"m\"]) ::slotted([column~=\"10m\"]), :host([size=\"l\"]) ::slotted([column~=\"10l\"]), :host([size=\"xl\"]) ::slotted([column~=\"10xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"10xxl\"]){ grid-column-end: span 10; }\n::slotted([column~=\"11\"]), :host([size=\"xs\"]) ::slotted([column~=\"11xs\"]), :host([size=\"s\"]) ::slotted([column~=\"11s\"]), :host([size=\"m\"]) ::slotted([column~=\"11m\"]), :host([size=\"l\"]) ::slotted([column~=\"11l\"]), :host([size=\"xl\"]) ::slotted([column~=\"11xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"11xxl\"]){ grid-column-end: span 11; }\n::slotted([column~=\"12\"]), :host([size=\"xs\"]) ::slotted([column~=\"12xs\"]), :host([size=\"s\"]) ::slotted([column~=\"12s\"]), :host([size=\"m\"]) ::slotted([column~=\"12m\"]), :host([size=\"l\"]) ::slotted([column~=\"12l\"]), :host([size=\"xl\"]) ::slotted([column~=\"12xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"12xxl\"]){ grid-column-end: span 12; }\n::slotted([column~=\"13\"]), :host([size=\"xs\"]) ::slotted([column~=\"13xs\"]), :host([size=\"s\"]) ::slotted([column~=\"13s\"]), :host([size=\"m\"]) ::slotted([column~=\"13m\"]), :host([size=\"l\"]) ::slotted([column~=\"13l\"]), :host([size=\"xl\"]) ::slotted([column~=\"13xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"13xxl\"]){ grid-column-end: span 13; }\n::slotted([column~=\"14\"]), :host([size=\"xs\"]) ::slotted([column~=\"14xs\"]), :host([size=\"s\"]) ::slotted([column~=\"14s\"]), :host([size=\"m\"]) ::slotted([column~=\"14m\"]), :host([size=\"l\"]) ::slotted([column~=\"14l\"]), :host([size=\"xl\"]) ::slotted([column~=\"14xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"14xxl\"]){ grid-column-end: span 14; }\n::slotted([column~=\"15\"]), :host([size=\"xs\"]) ::slotted([column~=\"15xs\"]), :host([size=\"s\"]) ::slotted([column~=\"15s\"]), :host([size=\"m\"]) ::slotted([column~=\"15m\"]), :host([size=\"l\"]) ::slotted([column~=\"15l\"]), :host([size=\"xl\"]) ::slotted([column~=\"15xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"15xxl\"]){ grid-column-end: span 15; }\n::slotted([column~=\"16\"]), :host([size=\"xs\"]) ::slotted([column~=\"16xs\"]), :host([size=\"s\"]) ::slotted([column~=\"16s\"]), :host([size=\"m\"]) ::slotted([column~=\"16m\"]), :host([size=\"l\"]) ::slotted([column~=\"16l\"]), :host([size=\"xl\"]) ::slotted([column~=\"16xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"16xxl\"]){ grid-column-end: span 16; }\n::slotted([column~=\"17\"]), :host([size=\"xs\"]) ::slotted([column~=\"17xs\"]), :host([size=\"s\"]) ::slotted([column~=\"17s\"]), :host([size=\"m\"]) ::slotted([column~=\"17m\"]), :host([size=\"l\"]) ::slotted([column~=\"17l\"]), :host([size=\"xl\"]) ::slotted([column~=\"17xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"17xxl\"]){ grid-column-end: span 17; }\n::slotted([column~=\"18\"]), :host([size=\"xs\"]) ::slotted([column~=\"18xs\"]), :host([size=\"s\"]) ::slotted([column~=\"18s\"]), :host([size=\"m\"]) ::slotted([column~=\"18m\"]), :host([size=\"l\"]) ::slotted([column~=\"18l\"]), :host([size=\"xl\"]) ::slotted([column~=\"18xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"18xxl\"]){ grid-column-end: span 18; }\n::slotted([column~=\"19\"]), :host([size=\"xs\"]) ::slotted([column~=\"19xs\"]), :host([size=\"s\"]) ::slotted([column~=\"19s\"]), :host([size=\"m\"]) ::slotted([column~=\"19m\"]), :host([size=\"l\"]) ::slotted([column~=\"19l\"]), :host([size=\"xl\"]) ::slotted([column~=\"19xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"19xxl\"]){ grid-column-end: span 19; }\n::slotted([column~=\"20\"]), :host([size=\"xs\"]) ::slotted([column~=\"20xs\"]), :host([size=\"s\"]) ::slotted([column~=\"20s\"]), :host([size=\"m\"]) ::slotted([column~=\"20m\"]), :host([size=\"l\"]) ::slotted([column~=\"20l\"]), :host([size=\"xl\"]) ::slotted([column~=\"20xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"20xxl\"]){ grid-column-end: span 20; }\n::slotted([column~=\"21\"]), :host([size=\"xs\"]) ::slotted([column~=\"21xs\"]), :host([size=\"s\"]) ::slotted([column~=\"21s\"]), :host([size=\"m\"]) ::slotted([column~=\"21m\"]), :host([size=\"l\"]) ::slotted([column~=\"21l\"]), :host([size=\"xl\"]) ::slotted([column~=\"21xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"21xxl\"]){ grid-column-end: span 21; }\n::slotted([column~=\"22\"]), :host([size=\"xs\"]) ::slotted([column~=\"22xs\"]), :host([size=\"s\"]) ::slotted([column~=\"22s\"]), :host([size=\"m\"]) ::slotted([column~=\"22m\"]), :host([size=\"l\"]) ::slotted([column~=\"22l\"]), :host([size=\"xl\"]) ::slotted([column~=\"22xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"22xxl\"]){ grid-column-end: span 22; }\n::slotted([column~=\"23\"]), :host([size=\"xs\"]) ::slotted([column~=\"23xs\"]), :host([size=\"s\"]) ::slotted([column~=\"23s\"]), :host([size=\"m\"]) ::slotted([column~=\"23m\"]), :host([size=\"l\"]) ::slotted([column~=\"23l\"]), :host([size=\"xl\"]) ::slotted([column~=\"23xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"23xxl\"]){ grid-column-end: span 23; }\n::slotted([column~=\"24\"]), :host([size=\"xs\"]) ::slotted([column~=\"24xs\"]), :host([size=\"s\"]) ::slotted([column~=\"24s\"]), :host([size=\"m\"]) ::slotted([column~=\"24m\"]), :host([size=\"l\"]) ::slotted([column~=\"24l\"]), :host([size=\"xl\"]) ::slotted([column~=\"24xl\"]), :host([size=\"xxl\"]) ::slotted([column~=\"24xxl\"]){ grid-column-end: span 24; }\n\n::slotted([row~=\"1\"]){ grid-row-end: span 1; }\n::slotted([row~=\"2\"]){ grid-row-end: span 2; }\n::slotted([row~=\"3\"]){ grid-row-end: span 3; }\n::slotted([row~=\"4\"]){ grid-row-end: span 4; }\n::slotted([row~=\"5\"]){ grid-row-end: span 5; }\n::slotted([row~=\"6\"]){ grid-row-end: span 6; }\n::slotted([row~=\"7\"]){ grid-row-end: span 7; }\n::slotted([row~=\"8\"]){ grid-row-end: span 8; }\n::slotted([row~=\"9\"]){ grid-row-end: span 9; }\n::slotted([row~=\"10\"]){ grid-row-end: span 10; }\n::slotted([row~=\"11\"]){ grid-row-end: span 11; }\n::slotted([row~=\"12\"]){ grid-row-end: span 12; }\n::slotted([row~=\"13\"]){ grid-row-end: span 13; }\n::slotted([row~=\"14\"]){ grid-row-end: span 14; }\n::slotted([row~=\"15\"]){ grid-row-end: span 15; }\n::slotted([row~=\"16\"]){ grid-row-end: span 16; }\n::slotted([row~=\"17\"]){ grid-row-end: span 17; }\n::slotted([row~=\"18\"]){ grid-row-end: span 18; }\n::slotted([row~=\"19\"]){ grid-row-end: span 19; }\n::slotted([row~=\"20\"]){ grid-row-end: span 20; }\n::slotted([row~=\"21\"]){ grid-row-end: span 21; }\n::slotted([row~=\"22\"]){ grid-row-end: span 22; }\n::slotted([row~=\"23\"]){ grid-row-end: span 23; }\n::slotted([row~=\"24\"]){ grid-row-end: span 24; }\n\n::slotted([start-column~=\"0\"]){ grid-column-start: auto; }\n::slotted([start-column~=\"1\"]){ grid-column-start: 1; }\n::slotted([start-column~=\"2\"]){ grid-column-start: 2; }\n::slotted([start-column~=\"3\"]){ grid-column-start: 3; }\n::slotted([start-column~=\"4\"]){ grid-column-start: 4; }\n::slotted([start-column~=\"5\"]){ grid-column-start: 5; }\n::slotted([start-column~=\"6\"]){ grid-column-start: 6; }\n::slotted([start-column~=\"7\"]){ grid-column-start: 7; }\n::slotted([start-column~=\"8\"]){ grid-column-start: 8; }\n::slotted([start-column~=\"9\"]){ grid-column-start: 9; }\n::slotted([start-column~=\"10\"]){ grid-column-start: 10; }\n::slotted([start-column~=\"11\"]){ grid-column-start: 11; }\n::slotted([start-column~=\"12\"]){ grid-column-start: 12; }\n::slotted([start-column~=\"13\"]){ grid-column-start: 13; }\n::slotted([start-column~=\"14\"]){ grid-column-start: 14; }\n::slotted([start-column~=\"15\"]){ grid-column-start: 15; }\n::slotted([start-column~=\"16\"]){ grid-column-start: 16; }\n::slotted([start-column~=\"17\"]){ grid-column-start: 17; }\n::slotted([start-column~=\"18\"]){ grid-column-start: 18; }\n::slotted([start-column~=\"19\"]){ grid-column-start: 19; }\n::slotted([start-column~=\"20\"]){ grid-column-start: 20; }\n::slotted([start-column~=\"21\"]){ grid-column-start: 21; }\n::slotted([start-column~=\"22\"]){ grid-column-start: 22; }\n::slotted([start-column~=\"23\"]){ grid-column-start: 23; }\n::slotted([start-column~=\"24\"]){ grid-column-start: 24; }\n\n::slotted([start-row~=\"0\"]){ grid-row-start: auto; }\n::slotted([start-row~=\"1\"]){ grid-row-start: 1; }\n::slotted([start-row~=\"2\"]){ grid-row-start: 2; }\n::slotted([start-row~=\"3\"]){ grid-row-start: 3; }\n::slotted([start-row~=\"4\"]){ grid-row-start: 4; }\n::slotted([start-row~=\"5\"]){ grid-row-start: 5; }\n::slotted([start-row~=\"6\"]){ grid-row-start: 6; }\n::slotted([start-row~=\"7\"]){ grid-row-start: 7; }\n::slotted([start-row~=\"8\"]){ grid-row-start: 8; }\n::slotted([start-row~=\"9\"]){ grid-row-start: 9; }\n::slotted([start-row~=\"10\"]){ grid-row-start: 10; }\n::slotted([start-row~=\"11\"]){ grid-row-start: 11; }\n::slotted([start-row~=\"12\"]){ grid-row-start: 12; }\n::slotted([start-row~=\"13\"]){ grid-row-start: 13; }\n::slotted([start-row~=\"14\"]){ grid-row-start: 14; }\n::slotted([start-row~=\"15\"]){ grid-row-start: 15; }\n::slotted([start-row~=\"16\"]){ grid-row-start: 16; }\n::slotted([start-row~=\"17\"]){ grid-row-start: 17; }\n::slotted([start-row~=\"18\"]){ grid-row-start: 18; }\n::slotted([start-row~=\"19\"]){ grid-row-start: 19; }\n::slotted([start-row~=\"20\"]){ grid-row-start: 20; }\n::slotted([start-row~=\"21\"]){ grid-row-start: 21; }\n::slotted([start-row~=\"22\"]){ grid-row-start: 22; }\n::slotted([start-row~=\"23\"]){ grid-row-start: 23; }\n::slotted([start-row~=\"24\"]){ grid-row-start: 24; }\n</style>`\n","/* global HTMLElement */\n'use strict'\n\nimport { style } from './style'\ndeclare const ShadyCSS // eslint-disable-line no-unused-vars\n\nlet shadowRoot\nlet template = document.createElement('template')\ntemplate.innerHTML = `${style}\\n<slot></slot>`\n\nclass Grid extends HTMLElement { // eslint-disable-line no-unused-vars\n  /* Typescript: declare variables */\n  private _columns: string = null // eslint-disable-line no-undef\n  private _rows: string = null // eslint-disable-line no-undef\n  private _gutter: string = null // eslint-disable-line no-undef\n  private _rowgutter: string = null // eslint-disable-line no-undef\n  private _autoflow: string = null // eslint-disable-line no-undef\n  private _breakpoints: object = null // eslint-disable-line no-undef\n\n  constructor () {\n    // If you define a constructor, always call super() first!\n    // This is specific to CE and required by the spec.\n    super()\n    this._breakpoints = window._nuclei_grid.breakpoints || {}\n    // create shadowRoot\n    shadowRoot = this.attachShadow({mode: 'open'})\n    // check if polyfill is used\n    if (typeof ShadyCSS !== 'undefined') {\n      ShadyCSS.prepareTemplate(template, 'grid-container') // eslint-disable-line no-undef\n      // apply css polyfill\n      ShadyCSS.styleElement(this) // eslint-disable-line no-undef\n    }\n    // add content to shadowRoot\n    shadowRoot.appendChild(document.importNode(template.content, true))\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  static get observedAttributes () {\n    return ['gutter', 'rowgutter', 'autoflow', 'rows', 'columns']\n  }\n  /**\n   * @method observedAttributes\n   * @description return attributes that should be watched for updates\n   */\n  attributeChangedCallback (attrName: string, oldVal, newVal) {\n    this[attrName] = newVal\n  }\n\n  /**\n  * @method connectedCallback\n  * @description When element is added to DOM\n   */\n  connectedCallback () {\n    if (window._nuclei_grid.eventListeners === undefined || window._nuclei_grid.eventListeners.length <= 0) {\n      window.addEventListener('resize', this._resizeEvent)\n      window._nuclei_grid.eventListeners = []\n    }\n    window._nuclei_grid.eventListeners.push(this)\n    this._resizeEvent()\n  }\n  /**\n   * @method _resizeEvent\n   * @description resize event function\n   */\n  private _resizeEvent() {\n    window._nuclei_grid.eventListeners.forEach((item, index) => {\n      // re\n      if (!document.body.contains(item)) return window._nuclei_grid.eventListeners.splice(index, 1)\n      //\n      let prev = null\n      for (let breakpoint in item._breakpoints) {\n        if (item.clientWidth > item._breakpoints[breakpoint]) {\n          prev = {\n            size: item._breakpoints[breakpoint],\n            breakpoint: breakpoint\n          }\n        } else {\n          item.setAttribute('size',prev.breakpoint)\n          break\n        }\n      }\n      console.log(item.clientWidth)\n    })\n  }\n  /**\n  * @method _getBreakpoints\n  * @description get breakpoints from parent css variables\n   */\n  private _getBreakpoints () {\n    let breakpoints = {}\n    let sizes = [ 'xs', 's', 'm', 'l', 'xl', 'xxl' ]\n    // get breakpoints from css variables\n    sizes.forEach(function (size) {\n      let breakpoint = String(globalStyles.getPropertyValue('--grid-breakpoint-' + size)).trim() || null\n      if (breakpoint !== null) {\n        breakpoints[size] = breakpoint\n      }\n    })\n    return breakpoints\n  }\n  /**\n  * @method _columnCss\n  * @description return columns css\n   */\n  private _columnCss (size: string = '') {\n    let maxColumns = 24\n    let maxRows = 24\n    let cssStyle = ``\n    // loop through columns\n    cssStyle += `::slotted([start-column~=\"0${size}\"]){ grid-column-start: auto; }\\n`\n    for (let i = 1; i <= maxColumns; i++) {\n      // cssStyle += `::slotted([column~=\"${i}${size}\"]){ grid-column-end: span ${i}; }\\n`\n      cssStyle += `::slotted([start-column~=\"${i}${size}\"]){ grid-column-start: ${i}; }\\n`\n    }\n    // loop through rows\n    cssStyle += `::slotted([start-row~=\"0${size}\"]){ grid-row-start: auto; }\\n`\n    for (let i = 1; i <= maxRows; i++) {\n      // cssStyle += `::slotted([row~=\"${i}${size}\"]){ grid-row-end: span ${i}; }\\n`\n      cssStyle += `::slotted([start-row~=\"${i}${size}\"]){ grid-row-start: ${i}; }\\n`\n    }\n    // reset start values\n    // cssStyle += `::slotted([start-column~=\"0${size}\"]){ grid-column-start: auto; }\\n`\n    // cssStyle += `::slotted([start-row~=\"0${size}\"]){ grid-row-start: auto; }\\n`\n    console.log(cssStyle)\n  }\n  /**\n  * @method _breakPointCss\n  * @description return break point css\n   */\n  private _breakPointCss () {\n    let style = ``\n    // get breakpoints from css variables\n    let breakpoints = this._getBreakpoints()\n    // add breakpoint css\n    Object.keys(breakpoints).forEach((size, index) => {\n      style += `@media (min-width:${breakpoints[size]}){\n        :host{\n          grid-template-columns: repeat(var(--grid-columns-${size}, var(--grid-columns, auto-fill)), 1fr);\n          grid-template-rows: var(--grid-rows-${size}, var(--grid-rows, none));\n        }\n        ${this._columnCss(size)}\n      }\\n`\n    })\n    // return breakpoints\n    return style\n  }\n  /**\n  * @method setter autoflow\n  * @description set the autoflow property\n   */\n  set autoflow (autoflow: string) {\n    if (this._autoflow === autoflow) return\n    this._autoflow = autoflow\n\n    this.setAttribute('autoflow', autoflow)\n  }\n  /**\n  * @method setter gutter\n  * @description set the gutter property\n   */\n  set gutter (gutter: string) {\n    if (this._gutter === gutter) return\n    this._gutter = gutter\n\n    this.style.setProperty('--grid-gutter', gutter)\n    this.setAttribute('gutter', gutter)\n  }\n  /**\n  * @method setter rowgutter\n  * @description set the rowgutter property\n   */\n  set rowgutter (rowgutter: string) {\n    if (this._rowgutter === rowgutter) return\n    this._rowgutter = rowgutter\n\n    this.style.setProperty('--grid-row-gutter', rowgutter)\n    this.setAttribute('rowgutter', rowgutter)\n  }\n  /**\n  * @method setter columns\n  * @description set the columns property\n   */\n  set columns (columns: string) {\n    if (this._columns === columns) return\n    this._columns = columns\n\n    columns.split(' ').forEach((item) => {\n      let size = item.replace(/[0-9]+/g, '').trim()\n      this.style.setProperty(`--grid-columns${size.length > 0 ? '-' : ''}${size}`, item.replace(/[^0-9]*/g, '').trim())\n    })\n\n    this.setAttribute('columns', columns)\n  }\n  /**\n  * @method setter rows\n  * @description set the rows property\n   */\n  set rows (rows: string) {\n    if (this._rows === rows) return\n    this._rows = rows\n\n    rows.split(' ').forEach((item) => {\n      let size = item.replace(/[0-9]+/g, '').trim()\n      this.style.setProperty(`--grid-rows${size.length > 0 ? '-' : ''}${size}`, `repeat(${item.replace(/[^0-9]*/g, '').trim()}, 1fr)`)\n    })\n\n    this.setAttribute('rows', rows)\n  }\n}\n\nwindow.customElements.define('grid-container', Grid)\n"],"names":["style"],"mappings":"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"}