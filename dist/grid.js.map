{"version":3,"file":"grid.js","sources":["../src/grid.ts"],"sourcesContent":["/* global HTMLElement Window CustomEvent CSSStyleDeclaration */\ninterface CSSStyleDeclaration {\n  gridColumnGap: any // eslint-disable-line no-undef\n}\ninterface Window {\n  nucleiGrid: any // eslint-disable-line no-undef\n  customElements: CustomElementRegistry // eslint-disable-line no-undef\n}\n\ndeclare const ShadyCSS // eslint-disable-line no-unused-vars\ndeclare var window: Window\ndeclare let style // eslint-disable-line no-unused-vars\n\nlet shadowRoot\nlet template = document.createElement('template')\ntemplate.innerHTML = `${style}\\n<slot></slot>`\n\nclass Grid extends HTMLElement { // eslint-disable-line no-unused-vars\n  /* Typescript: declare variables */\n  private _columns: string = null // eslint-disable-line no-undef\n  private _rows: string = null // eslint-disable-line no-undef\n  private _gutter: string = null // eslint-disable-line no-undef\n  private _rowgutter: string = null // eslint-disable-line no-undef\n  private _autoflow: string = null // eslint-disable-line no-undef\n  private _breakpoints: object = null // eslint-disable-line no-undef\n  private _breakpointsString: string = null // eslint-disable-line no-undef\n\n  constructor () {\n    // If you define a constructor, always call super() first!\n    // This is specific to CE and required by the spec.\n    super()\n    // create shadowRoot\n    shadowRoot = this.attachShadow({mode: 'open'})\n    // check if polyfill is used\n    if (typeof ShadyCSS !== 'undefined') {\n      ShadyCSS.prepareTemplate(template, 'grid-container') // eslint-disable-line no-undef\n      // apply css polyfill\n      ShadyCSS.styleElement(this) // eslint-disable-line no-undef\n    }\n    // add content to shadowRoot\n    shadowRoot.appendChild(document.importNode(template.content, true))\n  }\n  /**\n  * @method observedAttributes\n  * @description return attributes that should be watched for updates\n   */\n  static get observedAttributes () {\n    return ['gutter', 'rowgutter', 'autoflow', 'rows', 'columns', 'breakpoints']\n  }\n  /**\n   * @method observedAttributes\n   * @description return attributes that should be watched for updates\n   */\n  attributeChangedCallback (attrName: string, oldVal, newVal) {\n    this[attrName] = newVal\n  }\n\n  /**\n  * @method connectedCallback\n  * @description When element is added to DOM\n   */\n  connectedCallback () {\n    // attach event handler if not present\n    if (window.nucleiGrid === undefined || window.nucleiGrid.elements === undefined || window.nucleiGrid.elements.length <= 0) {\n      window.addEventListener('resize', this._debounce(this._resizeEvent, 50))\n      window.nucleiGrid = window.nucleiGrid || {}\n      window.nucleiGrid.elements = []\n    }\n    // add element to list for resize event\n    window.nucleiGrid.elements.push(this)\n    // run element query for initial size\n    this._elementQuery(this)\n  }\n  /**\n   * @method _resizeEvent\n   * @description resize event function\n   */\n  private _resizeEvent () {\n    window.nucleiGrid.elements.forEach((element, index) => {\n      // if element not in DOM remove from array and return\n      if (!document.body.contains(element)) return window.nucleiGrid.elements.splice(index, 1)\n      // call elementQuery if element is in dom\n      element._elementQuery(element)\n    })\n  }\n  /**\n   * @method _debounce\n   * @description simple debounce\n   */\n  private _debounce (callback: object, time: number) {\n    let timeout\n    return function () {\n      clearTimeout(timeout) // this clears the timeout so callback in timeout is not called\n      timeout = setTimeout(callback, time)\n    }\n  }\n\n  /**\n   * @method _elementQuery\n   * @description check the size of the element and react if nessesary\n   */\n  private _elementQuery (element) {\n    let gridGap = window.getComputedStyle(element).gridColumnGap\n    let elementWidth = element.clientWidth\n    if (gridGap > 0) {\n      element.style.gridColumnGap = 0\n      elementWidth = element.clientWidth\n      element.style.gridColumnGap = gridGap\n    }\n    // state variable\n    let prev = null\n    // get last item\n    let last = Object.keys(element.breakpoints)[Object.keys(element.breakpoints).length - 1]\n    // loop through breakpoints\n    for (let breakpoint in element.breakpoints) {\n      if (elementWidth >= element.breakpoints[breakpoint] || prev === null) {\n        // keep track of previous item in case next one is to big\n        prev = {\n          boundary: element.breakpoints[breakpoint],\n          size: breakpoint\n        }\n      }\n      // if next element is to big or it is the last element: activate\n      if (elementWidth < element.breakpoints[breakpoint] || last === breakpoint) {\n        // get old size\n        let oldSize = element.getAttribute('size')\n        // only update if size actually changed\n        if (oldSize !== prev.size) {\n          // dispatch custom sizechange event\n          element.dispatchEvent(new CustomEvent('sizechange', { detail: {\n            size: prev.size,\n            pixelBoundary: prev.boundary,\n            prevSize: oldSize\n          }}))\n          // change size attribute\n          element.setAttribute('size', prev.size)\n        }\n        break\n      }\n    }\n  }\n  /**\n   * @method setter breakpoints\n   * @description set breakpoints\n   */\n  set breakpoints (breakpoints: string) {\n    if (this._breakpointsString === breakpoints) return\n    this._breakpointsString = breakpoints\n    // create breakpoint object\n    this._breakpoints = {}\n    breakpoints.split(' ').forEach((item) => {\n      let size = item.replace(/[0-9]+/g, '').trim()\n      this._breakpoints[size] = item.replace(/[^0-9]*/g, '').trim()\n    })\n\n    this.setAttribute('breakpoints', breakpoints)\n  }\n  /**\n   * @method getter breakpoints\n   * @description get breakpoints\n   */\n  get breakpoints () {\n    return this._breakpoints || window.nucleiGrid.breakpoints || {}\n  }\n  /**\n  * @method setter autoflow\n  * @description set the autoflow property\n   */\n  set autoflow (autoflow: string) {\n    if (this._autoflow === autoflow) return\n    this._autoflow = autoflow\n\n    this.setAttribute('autoflow', autoflow)\n  }\n  /**\n  * @method setter gutter\n  * @description set the gutter property\n   */\n  set gutter (gutter: string) {\n    if (this._gutter === gutter) return\n    this._gutter = gutter\n\n    gutter.split(' ').forEach((item) => {\n      let size = item.replace(/[0-9]+/g, '').trim()\n      this.style.setProperty(`--grid-gutter${size.length > 0 ? '-' : ''}${size}`, `${item.replace(/[^0-9]*/g, '').trim()}px`)\n    })\n\n    this.setAttribute('gutter', gutter)\n  }\n  /**\n  * @method setter rowgutter\n  * @description set the rowgutter property\n   */\n  set rowgutter (rowgutter: string) {\n    if (this._rowgutter === rowgutter) return\n    this._rowgutter = rowgutter\n\n    rowgutter.split(' ').forEach((item) => {\n      let size = item.replace(/[0-9]+/g, '').trim()\n      this.style.setProperty(`--grid-row-gutter${size.length > 0 ? '-' : ''}${size}`, `${item.replace(/[^0-9]*/g, '').trim()}px`)\n    })\n\n    this.setAttribute('rowgutter', rowgutter)\n  }\n  /**\n  * @method setter columns\n  * @description set the columns property\n   */\n  set columns (columns: string) {\n    if (this._columns === columns) return\n    this._columns = columns\n\n    columns.split(' ').forEach((item) => {\n      let size = item.replace(/[0-9]+/g, '').trim()\n      this.style.setProperty(`--grid-columns${size.length > 0 ? '-' : ''}${size}`, item.replace(/[^0-9]*/g, '').trim())\n    })\n\n    this.setAttribute('columns', columns)\n  }\n  /**\n  * @method setter rows\n  * @description set the rows property\n   */\n  set rows (rows: string) {\n    if (this._rows === rows) return\n    this._rows = rows\n\n    rows.split(' ').forEach((item) => {\n      let size = item.replace(/[0-9]+/g, '').trim()\n      this.style.setProperty(`--grid-rows${size.length > 0 ? '-' : ''}${size}`, `repeat(${item.replace(/[^0-9]*/g, '').trim()}, 1fr)`)\n    })\n\n    this.setAttribute('rows', rows)\n  }\n}\n\nwindow.customElements.define('grid-container', Grid)\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAI,UAAU,CAAA;AACd,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAA;AACjD,QAAQ,CAAC,SAAS,GAAG,GAAG,KAAK,iBAAiB,CAAA;AAE9C,UAAW,SAAQ,WAAW;IAU5B;QAGE,KAAK,EAAE,CAAA;QAXD,aAAQ,GAAW,IAAI,CAAA;QACvB,UAAK,GAAW,IAAI,CAAA;QACpB,YAAO,GAAW,IAAI,CAAA;QACtB,eAAU,GAAW,IAAI,CAAA;QACzB,cAAS,GAAW,IAAI,CAAA;QACxB,iBAAY,GAAW,IAAI,CAAA;QAC3B,uBAAkB,GAAW,IAAI,CAAA;QAOvC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC,CAAA;QAE9C,IAAI,OAAO,QAAQ,KAAK,WAAW,EAAE;YACnC,QAAQ,CAAC,eAAe,CAAC,QAAQ,EAAE,gBAAgB,CAAC,CAAA;YAEpD,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA;SAC5B;QAED,UAAU,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA;KACpE;IAKD,WAAW,kBAAkB;QAC3B,OAAO,CAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,aAAa,CAAC,CAAA;KAC7E;IAKD,wBAAwB,CAAE,QAAgB,EAAE,MAAM,EAAE,MAAM;QACxD,IAAI,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAA;KACxB;IAMD,iBAAiB;QAEf,IAAI,MAAM,CAAC,UAAU,KAAK,SAAS,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,KAAK,SAAS,IAAI,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;YACzH,MAAM,CAAC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC,CAAA;YACxE,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,IAAI,EAAE,CAAA;YAC3C,MAAM,CAAC,UAAU,CAAC,QAAQ,GAAG,EAAE,CAAA;SAChC;QAED,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAErC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAA;KACzB;IAKO,YAAY;QAClB,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,KAAK;YAEhD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;gBAAE,OAAO,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAA;YAExF,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,CAAA;SAC/B,CAAC,CAAA;KACH;IAKO,SAAS,CAAE,QAAgB,EAAE,IAAY;QAC/C,IAAI,OAAO,CAAA;QACX,OAAO;YACL,YAAY,CAAC,OAAO,CAAC,CAAA;YACrB,OAAO,GAAG,UAAU,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAA;SACrC,CAAA;KACF;IAMO,aAAa,CAAE,OAAO;QAC5B,IAAI,OAAO,GAAG,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC,aAAa,CAAA;QAC5D,IAAI,YAAY,GAAG,OAAO,CAAC,WAAW,CAAA;QACtC,IAAI,OAAO,GAAG,CAAC,EAAE;YACf,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,CAAC,CAAA;YAC/B,YAAY,GAAG,OAAO,CAAC,WAAW,CAAA;YAClC,OAAO,CAAC,KAAK,CAAC,aAAa,GAAG,OAAO,CAAA;SACtC;QAED,IAAI,IAAI,GAAG,IAAI,CAAA;QAEf,IAAI,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA;QAExF,KAAK,IAAI,UAAU,IAAI,OAAO,CAAC,WAAW,EAAE;YAC1C,IAAI,YAAY,IAAI,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,IAAI,KAAK,IAAI,EAAE;gBAEpE,IAAI,GAAG;oBACL,QAAQ,EAAE,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC;oBACzC,IAAI,EAAE,UAAU;iBACjB,CAAA;aACF;YAED,IAAI,YAAY,GAAG,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,IAAI,KAAK,UAAU,EAAE;gBAEzE,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAA;gBAE1C,IAAI,OAAO,KAAK,IAAI,CAAC,IAAI,EAAE;oBAEzB,OAAO,CAAC,aAAa,CAAC,IAAI,WAAW,CAAC,YAAY,EAAE,EAAE,MAAM,EAAE;4BAC5D,IAAI,EAAE,IAAI,CAAC,IAAI;4BACf,aAAa,EAAE,IAAI,CAAC,QAAQ;4BAC5B,QAAQ,EAAE,OAAO;yBAClB,EAAC,CAAC,CAAC,CAAA;oBAEJ,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAA;iBACxC;gBACD,MAAK;aACN;SACF;KACF;IAKD,IAAI,WAAW,CAAE,WAAmB;QAClC,IAAI,IAAI,CAAC,kBAAkB,KAAK,WAAW;YAAE,OAAM;QACnD,IAAI,CAAC,kBAAkB,GAAG,WAAW,CAAA;QAErC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAA;QACtB,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;YAClC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;YAC7C,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;SAC9D,CAAC,CAAA;QAEF,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,WAAW,CAAC,CAAA;KAC9C;IAKD,IAAI,WAAW;QACb,OAAO,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,UAAU,CAAC,WAAW,IAAI,EAAE,CAAA;KAChE;IAKD,IAAI,QAAQ,CAAE,QAAgB;QAC5B,IAAI,IAAI,CAAC,SAAS,KAAK,QAAQ;YAAE,OAAM;QACvC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAA;QAEzB,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAA;KACxC;IAKD,IAAI,MAAM,CAAE,MAAc;QACxB,IAAI,IAAI,CAAC,OAAO,KAAK,MAAM;YAAE,OAAM;QACnC,IAAI,CAAC,OAAO,GAAG,MAAM,CAAA;QAErB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;YAC7B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;YAC7C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SACxH,CAAC,CAAA;QAEF,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAA;KACpC;IAKD,IAAI,SAAS,CAAE,SAAiB;QAC9B,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS;YAAE,OAAM;QACzC,IAAI,CAAC,UAAU,GAAG,SAAS,CAAA;QAE3B,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;YAChC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;YAC7C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,oBAAoB,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;SAC5H,CAAC,CAAA;QAEF,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,SAAS,CAAC,CAAA;KAC1C;IAKD,IAAI,OAAO,CAAE,OAAe;QAC1B,IAAI,IAAI,CAAC,QAAQ,KAAK,OAAO;YAAE,OAAM;QACrC,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAA;QAEvB,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;YAC9B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;YAC7C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,iBAAiB,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,CAAA;SAClH,CAAC,CAAA;QAEF,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,CAAA;KACtC;IAKD,IAAI,IAAI,CAAE,IAAY;QACpB,IAAI,IAAI,CAAC,KAAK,KAAK,IAAI;YAAE,OAAM;QAC/B,IAAI,CAAC,KAAK,GAAG,IAAI,CAAA;QAEjB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI;YAC3B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAA;YAC7C,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,IAAI,CAAC,MAAM,GAAG,CAAC,GAAG,GAAG,GAAG,EAAE,GAAG,IAAI,EAAE,EAAE,UAAU,IAAI,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAA;SACjI,CAAC,CAAA;QAEF,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAI,CAAC,CAAA;KAChC;CACF;AAED,MAAM,CAAC,cAAc,CAAC,MAAM,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAA;;;;"}